{
  "api/GitProfileManager.Commands.Activate.ActivationSettings.html": {
    "href": "api/GitProfileManager.Commands.Activate.ActivationSettings.html",
    "title": "Class ActivationSettings | Git Profile Manager",
    "keywords": "Class ActivationSettings Inheritance System.Object ActivationSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Activate Assembly : git-profile-manager.dll Syntax public sealed class ActivationSettings Properties | Improve this Doc View Source ApplyGlobally Declaration [Option(\"-g|--global\")] public bool ApplyGlobally { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ProfileName Declaration [Argument(\"<PROFILE>\", Order = 0)] public string ProfileName { get; set; } Property Value Type Description System.String Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileEditCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileEditCommand.html",
    "title": "Class ProfileEditCommand | Git Profile Manager",
    "keywords": "Class ProfileEditCommand Inheritance System.Object Spectre.CommandLine.Command < ProfileEditCommand.Settings > ProfileEditCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileEditCommand : Command<ProfileEditCommand.Settings>, ICommand Constructors | Improve this Doc View Source ProfileEditCommand(IGitProfileStore) Declaration public ProfileEditCommand(IGitProfileStore store) Parameters Type Name Description IGitProfileStore store Properties | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ProfileEditCommand.Settings) Declaration public override int Run(ProfileEditCommand.Settings settings) Parameters Type Name Description ProfileEditCommand.Settings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileEditCommand.Settings>.Run(GitProfileManager.Commands.Profile.ProfileEditCommand.Settings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileImportCommand.Settings.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileImportCommand.Settings.html",
    "title": "Class ProfileImportCommand.Settings | Git Profile Manager",
    "keywords": "Class ProfileImportCommand.Settings Inheritance System.Object ProfileImportCommand.Settings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public sealed class Settings Properties | Improve this Doc View Source AsConfig Declaration [Option(\"--from-config\")] public bool AsConfig { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CommandFile Declaration [Argument(\"<FILE>\", Order = 0)] public string CommandFile { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProfileName Declaration [Option(\"-n|--profile-name\")] public string ProfileName { get; set; } Property Value Type Description System.String Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileImportCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileImportCommand.html",
    "title": "Class ProfileImportCommand | Git Profile Manager",
    "keywords": "Class ProfileImportCommand Inheritance System.Object Spectre.CommandLine.Command < ProfileImportCommand.Settings > ProfileImportCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileImportCommand : Command<ProfileImportCommand.Settings>, ICommand Constructors | Improve this Doc View Source ProfileImportCommand(IGitProfileStore, ICommandFileService) Declaration public ProfileImportCommand(IGitProfileStore store, ICommandFileService fileService) Parameters Type Name Description IGitProfileStore store ICommandFileService fileService Properties | Improve this Doc View Source FileService Declaration public ICommandFileService FileService { get; } Property Value Type Description ICommandFileService | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ProfileImportCommand.Settings) Declaration public override int Run(ProfileImportCommand.Settings settings) Parameters Type Name Description ProfileImportCommand.Settings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileImportCommand.Settings>.Run(GitProfileManager.Commands.Profile.ProfileImportCommand.Settings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.html": {
    "href": "api/GitProfileManager.Commands.Profile.html",
    "title": "Namespace GitProfileManager.Commands.Profile | Git Profile Manager",
    "keywords": "Namespace GitProfileManager.Commands.Profile Classes ProfileCommand ProfileCreateCommand ProfileCreateCommand.Settings ProfileDeleteCommand ProfileDeleteCommand.Settings ProfileEditCommand ProfileEditCommand.Settings ProfileExportCommand ProfileExportCommand.Settings ProfileImportCommand ProfileImportCommand.Settings ProfileListCommand ProfileListCommand.Settings"
  },
  "api/GitProfileManager.Commands.ProfileSettings.html": {
    "href": "api/GitProfileManager.Commands.ProfileSettings.html",
    "title": "Class ProfileSettings | Git Profile Manager",
    "keywords": "Class ProfileSettings Inheritance System.Object ProfileSettings ProfileExportCommand.Settings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands Assembly : git-profile-manager.dll Syntax public abstract class ProfileSettings Properties | Improve this Doc View Source ProfileName Declaration [Argument(\"<PROFILE>\", Order = 0)] public virtual string ProfileName { get; set; } Property Value Type Description System.String Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.IGitProfileStore.html": {
    "href": "api/GitProfileManager.Services.IGitProfileStore.html",
    "title": "Interface IGitProfileStore | Git Profile Manager",
    "keywords": "Interface IGitProfileStore Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public interface IGitProfileStore Methods | Improve this Doc View Source DeleteProfile(String) Declaration bool DeleteProfile(string profileName) Parameters Type Name Description System.String profileName Returns Type Description System.Boolean | Improve this Doc View Source GetProfiles() Declaration IEnumerable<string> GetProfiles() Returns Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source ReadProfile(String) Declaration Dictionary<string, string> ReadProfile(string profileName) Parameters Type Name Description System.String profileName Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source WriteProfile(String, Dictionary<String, String>) Declaration bool WriteProfile(string profileName, Dictionary<string, string> configurations) Parameters Type Name Description System.String profileName System.Collections.Generic.Dictionary < System.String , System.String > configurations Returns Type Description System.Boolean Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.RepositoryInformation.html": {
    "href": "api/GitProfileManager.Services.RepositoryInformation.html",
    "title": "Class RepositoryInformation | Git Profile Manager",
    "keywords": "Class RepositoryInformation Inheritance System.Object RepositoryInformation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public class RepositoryInformation : IDisposable Properties | Improve this Doc View Source BranchName Declaration public string BranchName { get; } Property Value Type Description System.String | Improve this Doc View Source CommitHash Declaration public string CommitHash { get; } Property Value Type Description System.String | Improve this Doc View Source HasUncommittedChanges Declaration public bool HasUncommittedChanges { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasUnpushedCommits Declaration public bool HasUnpushedCommits { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Log Declaration public IEnumerable<string> Log { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source TrackedBranchName Declaration public string TrackedBranchName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable.Dispose() Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Activate.ActivateCommand.html": {
    "href": "api/GitProfileManager.Commands.Activate.ActivateCommand.html",
    "title": "Class ActivateCommand | Git Profile Manager",
    "keywords": "Class ActivateCommand Inheritance System.Object Spectre.CommandLine.Command < ActivationSettings > ActivateCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Activate Assembly : git-profile-manager.dll Syntax public class ActivateCommand : Command<ActivationSettings>, ICommand Constructors | Improve this Doc View Source ActivateCommand(IGitConfigService, IGitProfileStore) Declaration public ActivateCommand(IGitConfigService command, IGitProfileStore store) Parameters Type Name Description IGitConfigService command IGitProfileStore store Properties | Improve this Doc View Source Service Declaration public IGitConfigService Service { get; } Property Value Type Description IGitConfigService | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ActivationSettings) Declaration public override int Run(ActivationSettings settings) Parameters Type Name Description ActivationSettings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Run(GitProfileManager.Commands.Activate.ActivationSettings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Activate.html": {
    "href": "api/GitProfileManager.Commands.Activate.html",
    "title": "Namespace GitProfileManager.Commands.Activate | Git Profile Manager",
    "keywords": "Namespace GitProfileManager.Commands.Activate Classes ActivateCommand ActivationSettings"
  },
  "api/GitProfileManager.Commands.Deactivate.DeactivateCommand.html": {
    "href": "api/GitProfileManager.Commands.Deactivate.DeactivateCommand.html",
    "title": "Class DeactivateCommand | Git Profile Manager",
    "keywords": "Class DeactivateCommand Inheritance System.Object Spectre.CommandLine.Command < ActivationSettings > DeactivateCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Deactivate Assembly : git-profile-manager.dll Syntax public class DeactivateCommand : Command<ActivationSettings>, ICommand Constructors | Improve this Doc View Source DeactivateCommand(IGitConfigService, IGitProfileStore) Declaration public DeactivateCommand(IGitConfigService command, IGitProfileStore store) Parameters Type Name Description IGitConfigService command IGitProfileStore store Properties | Improve this Doc View Source Service Declaration public IGitConfigService Service { get; } Property Value Type Description IGitConfigService | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ActivationSettings) Declaration public override int Run(ActivationSettings settings) Parameters Type Name Description ActivationSettings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Activate.ActivationSettings>.Run(GitProfileManager.Commands.Activate.ActivationSettings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Deactivate.html": {
    "href": "api/GitProfileManager.Commands.Deactivate.html",
    "title": "Namespace GitProfileManager.Commands.Deactivate | Git Profile Manager",
    "keywords": "Namespace GitProfileManager.Commands.Deactivate Classes DeactivateCommand"
  },
  "api/GitProfileManager.Commands.Profile.ProfileCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileCommand.html",
    "title": "Class ProfileCommand | Git Profile Manager",
    "keywords": "Class ProfileCommand Inheritance System.Object Spectre.CommandLine.Command < Spectre.CommandLine.NoSettings > Spectre.CommandLine.ProxyCommand ProfileCommand Inherited Members Spectre.CommandLine.ProxyCommand.Run(Spectre.CommandLine.NoSettings) Spectre.CommandLine.Command<Spectre.CommandLine.NoSettings>.Success Spectre.CommandLine.Command<Spectre.CommandLine.NoSettings>.Error Spectre.CommandLine.Command<Spectre.CommandLine.NoSettings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<Spectre.CommandLine.NoSettings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<Spectre.CommandLine.NoSettings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileCommand : ProxyCommand, ICommand Constructors | Improve this Doc View Source ProfileCommand() Declaration public ProfileCommand() Methods | Improve this Doc View Source Configure(ICommandRegistrar) Declaration public override void Configure(ICommandRegistrar registrar) Parameters Type Name Description Spectre.CommandLine.ICommandRegistrar registrar Overrides Spectre.CommandLine.ProxyCommand.Configure(Spectre.CommandLine.ICommandRegistrar) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings.html",
    "title": "Class ProfileCreateCommand.Settings | Git Profile Manager",
    "keywords": "Class ProfileCreateCommand.Settings Inheritance System.Object ProfileCreateCommand.Settings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public sealed class Settings Properties | Improve this Doc View Source Name Declaration [Argument(\"<NAME>\", Order = 0)] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source SourceProfileName Declaration [Option(\"--from\")] public string SourceProfileName { get; set; } Property Value Type Description System.String Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileCreateCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileCreateCommand.html",
    "title": "Class ProfileCreateCommand | Git Profile Manager",
    "keywords": "Class ProfileCreateCommand Inheritance System.Object Spectre.CommandLine.Command < ProfileCreateCommand.Settings > ProfileCreateCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileCreateCommand : Command<ProfileCreateCommand.Settings>, ICommand Constructors | Improve this Doc View Source ProfileCreateCommand(IGitProfileStore, ICommandFileService) Declaration public ProfileCreateCommand(IGitProfileStore store, ICommandFileService fileService) Parameters Type Name Description IGitProfileStore store ICommandFileService fileService Properties | Improve this Doc View Source FileService Declaration public ICommandFileService FileService { get; } Property Value Type Description ICommandFileService | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ProfileCreateCommand.Settings) Declaration public override int Run(ProfileCreateCommand.Settings settings) Parameters Type Name Description ProfileCreateCommand.Settings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings>.Run(GitProfileManager.Commands.Profile.ProfileCreateCommand.Settings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Extensions.html": {
    "href": "api/GitProfileManager.Extensions.html",
    "title": "Class Extensions | Git Profile Manager",
    "keywords": "Class Extensions Inheritance System.Object Extensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager Assembly : git-profile-manager.dll Syntax public static class Extensions Methods | Improve this Doc View Source IsAssignableTo(Type, Type) Declaration public static bool IsAssignableTo(this Type type, Type otherType) Parameters Type Name Description System.Type type System.Type otherType Returns Type Description System.Boolean | Improve this Doc View Source IsAssignableTo<TTarget>(Object) Declaration public static bool IsAssignableTo<TTarget>(this object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Type Parameters Name Description TTarget | Improve this Doc View Source ToConfig(IEnumerable<String>) Declaration public static IEnumerable<string> ToConfig(this IEnumerable<string> ss) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > ss Returns Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source ToConfig(String) Declaration public static string ToConfig(this string s) Parameters Type Name Description System.String s Returns Type Description System.String"
  },
  "api/GitProfileManager.GitCommandApp.html": {
    "href": "api/GitProfileManager.GitCommandApp.html",
    "title": "Class GitCommandApp | Git Profile Manager",
    "keywords": "Class GitCommandApp Inheritance System.Object Spectre.CommandLine.CommandAppBase < Spectre.CommandLine.CommandAppSettings > GitCommandApp Inherited Members Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Dispose() Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.RegisterCommand(System.Type) Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Run(System.String[]) Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Settings Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Streams Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Resolver System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager Assembly : git-profile-manager.dll Syntax public sealed class GitCommandApp : CommandAppBase<CommandAppSettings>, IDisposable Constructors | Improve this Doc View Source GitCommandApp() Declaration public GitCommandApp() Methods | Improve this Doc View Source Initialize() Declaration protected override void Initialize() Overrides Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Initialize() | Improve this Doc View Source RegisterCommand<TCommand>() Declaration public void RegisterCommand<TCommand>()where TCommand : ICommand Type Parameters Name Description TCommand Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.CommandFileService.html": {
    "href": "api/GitProfileManager.Services.CommandFileService.html",
    "title": "Class CommandFileService | Git Profile Manager",
    "keywords": "Class CommandFileService Inheritance System.Object CommandFileService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public class CommandFileService : ICommandFileService Methods | Improve this Doc View Source ReadFromFile(FileInfo) Declaration public Dictionary<string, string> ReadFromFile(FileInfo filePath) Parameters Type Name Description System.IO.FileInfo filePath Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > Implements ICommandFileService.ReadFromFile(FileInfo) | Improve this Doc View Source WriteToFile(Dictionary<String, String>, FileInfo, Boolean) Declaration public bool WriteToFile(Dictionary<string, string> configurations, FileInfo path, bool includeCommand = false) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > configurations System.IO.FileInfo path System.Boolean includeCommand Returns Type Description System.Boolean Implements ICommandFileService.WriteToFile(Dictionary<String, String>, FileInfo, Boolean) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.FileProfileStore.html": {
    "href": "api/GitProfileManager.Services.FileProfileStore.html",
    "title": "Class FileProfileStore | Git Profile Manager",
    "keywords": "Class FileProfileStore Inheritance System.Object FileProfileStore Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public class FileProfileStore : IGitProfileStore Methods | Improve this Doc View Source DeleteProfile(String) Declaration public bool DeleteProfile(string profileName) Parameters Type Name Description System.String profileName Returns Type Description System.Boolean Implements IGitProfileStore.DeleteProfile(String) | Improve this Doc View Source GetProfiles() Declaration public IEnumerable<string> GetProfiles() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements IGitProfileStore.GetProfiles() | Improve this Doc View Source ReadProfile(String) Declaration public Dictionary<string, string> ReadProfile(string profileName) Parameters Type Name Description System.String profileName Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > Implements IGitProfileStore.ReadProfile(String) | Improve this Doc View Source WriteProfile(String, Dictionary<String, String>) Declaration public bool WriteProfile(string profileName, Dictionary<string, string> configurations) Parameters Type Name Description System.String profileName System.Collections.Generic.Dictionary < System.String , System.String > configurations Returns Type Description System.Boolean Implements IGitProfileStore.WriteProfile(String, Dictionary<String, String>) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.GitCommandRunner.html": {
    "href": "api/GitProfileManager.Services.GitCommandRunner.html",
    "title": "Class GitCommandRunner | Git Profile Manager",
    "keywords": "Class GitCommandRunner Inheritance System.Object GitCommandRunner Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public class GitCommandRunner : IDisposable Constructors | Improve this Doc View Source GitCommandRunner() Declaration public GitCommandRunner() Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable.Dispose() Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.GitCommandService.html": {
    "href": "api/GitProfileManager.Services.GitCommandService.html",
    "title": "Class GitCommandService | Git Profile Manager",
    "keywords": "Class GitCommandService Inheritance System.Object GitCommandService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public class GitCommandService : IGitConfigService Constructors | Improve this Doc View Source GitCommandService(GitCommandRunner) Declaration public GitCommandService(GitCommandRunner runner) Parameters Type Name Description GitCommandRunner runner Methods | Improve this Doc View Source SetValue(String, String, Boolean) Declaration public bool SetValue(string key, string value, bool global = false) Parameters Type Name Description System.String key System.String value System.Boolean global Returns Type Description System.Boolean Implements IGitConfigService.SetValue(String, String, Boolean) | Improve this Doc View Source UnsetValue(String, String, Boolean) Declaration public bool UnsetValue(string key, string value, bool global = false) Parameters Type Name Description System.String key System.String value System.Boolean global Returns Type Description System.Boolean Implements IGitConfigService.UnsetValue(String, String, Boolean) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.ICommandFileService.html": {
    "href": "api/GitProfileManager.Services.ICommandFileService.html",
    "title": "Interface ICommandFileService | Git Profile Manager",
    "keywords": "Interface ICommandFileService Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public interface ICommandFileService Methods | Improve this Doc View Source ReadFromFile(FileInfo) Declaration Dictionary<string, string> ReadFromFile(FileInfo filePath) Parameters Type Name Description System.IO.FileInfo filePath Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source WriteToFile(Dictionary<String, String>, FileInfo, Boolean) Declaration bool WriteToFile(Dictionary<string, string> configurations, FileInfo path, bool includeCommand = false) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > configurations System.IO.FileInfo path System.Boolean includeCommand Returns Type Description System.Boolean Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.IGitConfigService.html": {
    "href": "api/GitProfileManager.Services.IGitConfigService.html",
    "title": "Interface IGitConfigService | Git Profile Manager",
    "keywords": "Interface IGitConfigService Namespace : GitProfileManager.Services Assembly : git-profile-manager.dll Syntax public interface IGitConfigService Methods | Improve this Doc View Source SetValue(String, String, Boolean) Declaration bool SetValue(string key, string value, bool global = false) Parameters Type Name Description System.String key System.String value System.Boolean global Returns Type Description System.Boolean | Improve this Doc View Source UnsetValue(String, String, Boolean) Declaration bool UnsetValue(string key, string value, bool global = false) Parameters Type Name Description System.String key System.String value System.Boolean global Returns Type Description System.Boolean Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Services.html": {
    "href": "api/GitProfileManager.Services.html",
    "title": "Namespace GitProfileManager.Services | Git Profile Manager",
    "keywords": "Namespace GitProfileManager.Services Classes CommandFileService FileProfileStore GitCommandRunner GitCommandService RepositoryInformation Interfaces ICommandFileService IGitConfigService IGitProfileStore"
  },
  "api/GitProfileManager.html": {
    "href": "api/GitProfileManager.html",
    "title": "Namespace GitProfileManager | Git Profile Manager",
    "keywords": "Namespace GitProfileManager Classes DependencyInjectionApp Extensions GitCommandApp"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Git Profile Manager | Git Profile Manager",
    "keywords": "Git Profile Manager Browse through the API using the menu on the left. The developer guide can be found here ."
  },
  "doc/contributing.html": {
    "href": "doc/contributing.html",
    "title": "Contributing Guide | Git Profile Manager",
    "keywords": "Contributing Guide This is very much an active project so any and all contributions are welcome, even just finding issues! Reporting issues All issues should be tracked on GitHub , with enough information to reproduce the issue. Code Contributions This repository is based around the Git Flow workflow, using feature branches and pull requests to manage incoming changes and fixes. Generally speaking, the process can be summarised as follows: Find a change or fix you want to implement Fork the repo Create a new branch named feature/<your-feature-name> and make your changes Open a PR from your feature branch against the develop branch (include the GitHub issue number for fixes) Success! I will provide feedback if needed, or just accept the changes directly and they should appear in the next release Documentation This documentation should include an Improve this Doc button in the upper right. Click it to quickly jump to the source of the current documentation. You can then fork, branch and issue a PR just as with code contributions (see above). License Note that this project (and all contributions) fall under the MIT License terms."
  },
  "doc/developers.html": {
    "href": "doc/developers.html",
    "title": "Development Guide | Git Profile Manager",
    "keywords": "Development Guide Tip You can check the Developer Reference above for full API source reference, directly from the source code. Building Building this project is super-simple: run build.ps1 if you're on Windows, or build.sh if you're on Linux. To build the documentation, you may also need wkhtmltopdf installed. Packaging To do a complete build of the tool and build all packages, you will need to have Docker installed and available on your host (and accessible to the user running the build script). The build script will complete all the packaging steps in a series of Docker containers so this may be a slow process the first time you run it as the relevant images are pulled from the Hub. Introduction GPM is a simple enough codebase that should be pretty easy to work with for veterans and beginners alike. Each of the operations (edit profile, import profile, activation/deactivation etc) is handled inside a single ICommand<> implementation, generally with the settings class declared inside or alongside the command class. These commands are wired up using Spectre.CommandLine , an awesome command line parser built by Patrik Svensson. Dependency Injection This app includes basic dependency injection support for command implementations. Simply include the types you need in the ICommand<> 's constructor, and the app will attempt to resolve this dependency from the DI container. If not found in the DI container, it will attempt to create a new instance (default Spectre.CommandLine behaviour), but this will only work with a parameterless constructor. You can see an example of this in the ActivateCommand command type. As with any other DI-controlled app, you must register the dependency first, which is done in Program.cs before the app is started. Help Information Help information is automatically generated from the attributes in the settings class, especially the Option / Argument attribute (in the Spectre.CommandLine namespace) and the Description attribute (in the System.ComponentModel namespace). The help option is always -h or --help ."
  },
  "doc/download.html": {
    "href": "doc/download.html",
    "title": "Downloads | Git Profile Manager",
    "keywords": "Downloads Just pick your platform out of the list below to download GPM: CentOS 7 [x64] RHEL 7 [x64] Ubuntu 16.04 [x64] Ubuntu 14.04 [x64] Debian 8 [x64] Windows 10 [x64/Chocolatey] Runtime package (requires .NET Core runtime) Tip You can use the links above with curl / wget for command-line installs"
  },
  "doc/faq.html": {
    "href": "doc/faq.html",
    "title": "Frequently Asked Questions | Git Profile Manager",
    "keywords": "Frequently Asked Questions <!-- content-here --> But, why? In short, because I could. In reality, this tool was originally designed as a simple example of a command-line app to demonstrate .NET Core native publishing, Docker in Cake builds and using Spectre.CommandLine in CLI apps. As it turns out, I found the app pretty handy and since I'd already put the work in, it made sense to publish it. What platforms are supported? Theoretically, Git Profile Manager is supported anywhere .NET Core is. If you already have the .NET Core runtime (i.e. dotnet ), then you can run GPM. Even if you don't have .NET Core installed, we build packages for Windows 10, macOS Sierra, RHEL 7, CentOS 7, Debian 8, Ubuntu 14.04 and Ubuntu 16.04. You can even run GPM from our Docker container, but we recommend installing locally. Can't you do the same thing as this tool with shell scripts? Yes, you can! And if you like shell scripts, power to you! There's a couple of reasons I built this out. For one, real cross-platform support. While WSL brings Bash to Windows, it's not most developers' primary environment. Second, I think this approach is less fragile. You can sync your user profiles file ( ~/.gitprofiles ) onto any mcahine and you get the same behaviour. In fact, since they do serve a similar purpose, we even support importing basic shell scripts into a profile using the gpm profile import command! Why isn't there a man page? Because you're reading the documentation! GPM is a pretty simple tool but we believe that man pages are not the most helpful form of documentation (especially if you need to support Windows). More importantly, thanks to the awesome Spectre.CommandLine project, you can always add --help to get full contextual information on how to use GPM. Now my Git config is borked and it's all your fault! Well now, that seems harsh. Git Profile Manager relies on the underlying system Git to run configuration, and will only run the config items you add to the profile. Even so, if things look to be a bit messed up, you can always just run gpm deactivate <profile-name> to unset the same config values. If you've activated multiple profiles, deactivate them in reverse order!"
  },
  "doc/installation.html": {
    "href": "doc/installation.html",
    "title": "GPM Installation | Git Profile Manager",
    "keywords": "GPM Installation Installing Git Profile Manager is simple and easy, and supports a huge range of platforms. Currently installers are provided for: Windows 10, Ubuntu (16.04, 14.04), RHEL 7, Debian 8, and CentOS 7. You can also manually install on any of the above, as well as macOS 10.12 Sierra . Linux Debian, Ubuntu First, you need to install some dependencies: apt-get install -y libicu52 libunwind8 Warning There is a known issue with .NET Core packaging that means you will need to add the trusty-security repositories to get libicu52 on Ubuntu 16.04 Now, just download the deb for your distro and install it with: dpkg -i git-profile-manager*.deb This will install the app to /usr/lib/git-profile-manager and automatically add gpm to your PATH . Just run gpm to get the help. RHEL, CentOS First, install dependencies: yum install -y libicu libunwind Now, download the rpm for your flavour and install it with: rpm -i git-profile-manager*.deb This will install the app to /usr/lib/git-profile-manager and automatically add gpm to your PATH . Just run gpm to get the help. Windows Chocolatey users can quickly install Git Profile Manager using the git-profile-manager.install package: choco install git-profile-manager.install This will install the app to the default Chocolatey location and should automatically add git-profile-manager.exe to your PATH. Note You can also download the release package, extract it somewhere and add that location to your PATH manually. Just run git-profile-manager to get the help. Tip You can use PowerShell's Set-Alias command to alias git-profile-manager to gpm to cut down on typing macOS At this time, there is no automated install available for macOS (since building for macOS requires a Mac and I don't have one). 10.12/ Sierra users can download the release package, extract it to a directory (say /Applications/git-profile-manager for example) and add that folder to your PATH . You can then run git-profile-manager from a terminal to run the app. Warning Note that the macOS version is largely untested and may be somewhat unstable. Please report issues and bugs on GitHub. Tip Add alias gpm=git-profile-manager to your ~/.bashrc to cut down on typing Docker We do also provide a Docker image, based on CentOS 7, that you can use to quickly test out GPM without installing it on your local machine. Note that this is not a recommended way of running GPM as it requires you to bind your current directory into the container using volumes, and profiles won't be shared with the host unless you also bind ~/.gitprofiles into the container. # Basic run docker run -it agc93/gpm # Advanced usage (for Bash) docker run -it -v $PWD:/app -v $HOME/.gitprofiles:/home/app/.gitprofiles -w /app agc93/gpm"
  },
  "doc/intro.html": {
    "href": "doc/intro.html",
    "title": "Git Profile Manager | Git Profile Manager",
    "keywords": "Git Profile Manager Introduction Git Profile Manager is a simple command line application to manage \"profiles\" for common Git configurations. For example, if you contribute to multiple repositories or teams and are often needing to change repository-specific (or global) addresses or options. History A little history first: this tool was actually originally just intended to be a simple demo for .NET Core native packaging, but I actually quite liked the idea and built it out properly and have now decided to publish it for everyone to hopefully find useful! Technology Git Profile Manager is built entirely in .NET Core, using the excellent Spectre.CommandLine and YamlDotNet libraries. Note that since it's using native Git underneath you'll need git available and on your PATH . Support for running without Git itself may come in a future release. Getting Started To get started, check out how to install for your platform , read the usage guide and check out the FAQ for common questions. Contributing This utility is completely open-source and is published on GitHub . To get started contributing, check out the contributing guide and the developer guide ."
  },
  "doc/profiles.html": {
    "href": "doc/profiles.html",
    "title": "Git Profiles | Git Profile Manager",
    "keywords": "Git Profiles What's in a profile? Essentially a Git \"profile\" is just a collection of configuration key-value pairs. For example commit.gpgsign=true is a single configuration item as is user.name=\"Alistair Chapman\" . Can multiple profiles be active? Absolutely! Since profiles are just a configuration collection, you can activate as many profiles as you want! Note that profiles you activate will overwrite any previous configuration values so start generic and go specific. You can also duplicate profiles by creating a new profile and using the --from option to specify an existing profile. You can then edit your new profile without affecting the old one. Where are they? GPM stores profiles in a file in your home directory called .gitprofiles . Linux and macOS users may need to show hidden files in their file manager before it's visible. This file is in YAML format (because YAML's awesome) and stores each profile as a named key with the configuration items included right in the file. Tip If you need to perform bulk editing, you can always directly edit ~/.gitprofiles . GPM doesn't mind. How do I create/edit/delete profiles? Profiles can be managed using the gpm profile command and all of its subcommands, detailed in full in the usage documentation ."
  },
  "doc/usage.html": {
    "href": "doc/usage.html",
    "title": "Usage Guide | Git Profile Manager",
    "keywords": "Usage Guide Note The instructions below are based on the Linux version (which uses gpm ). Windows/macOS users should use git-profile-manager instead (or add an alias). Getting help You can always run gpm --help to get info on the top-level commands available. Note that each command also has it's own --help option for easy assistance. Activate The activate command is the essential command for gpm . Activating a profile automatically applies all configuration options stored in the profile, applied to the current repository. You can also add the -g or --global flag to apply a profile globally (use with care). Example gpm activate work-profile Deactivate Deactivate is the opposite of activate and will unset any configuration options stored in the profile. Like activate , this applies to the current repository by default, but the --global flag will unset these items globally (use with extreme caution ). Example gpm deactivate my-oss-project Profile The profile command is used to managed saved Git profiles, and includes a number of subcommands. Create Create will create a new profile. By default, this profile is blank (i.e. includes no configuration options), but you can optionally provide a source profile for GPM to duplicate. Example gpm profile create --from personal work Delete Delete will delete the specified profile from your saved profiles completely. By default, you will be prompted to perform this command, but this can be skipped using the --non-interactive option. Example gpm profile delete work-profile Edit Edit allows you to edit already existing profiles (i.e. to add new configuration options to a profile). The profile will be created if it doesn't exist. Configuration options are specified as key-value pairs, similar to git config , separated by an ' = ' symbol. You can remove a configuration option using the --rm option Example gpm profile edit work-profile commit.gpgsign=true gpm profile edit work-profile gpg.signingkey=123ABCDEF --rm Export If you'd like to use your profiles outside of Git Profile Manager, you can use this option to export your profile into a file you can then copy/run/move as you see fit. The exported file is a plain text file with all the git config commands for your profile, one command per line. This file can then be run (through Bash or PowerShell) or used however you like. Example gpm profile export work-profile command-file.txt Import The opposite operation to export, import accepts a simple command file and creates a profile from it. GPM will read through the input file and create a profile with all of the Git configuration items found in the file. As such, this can be used to import not just from exported GPM profiles, but also from simple shell scripts you may already be using. The new profile will be named with the input file's name, or this can be overriden with the --profile-name option. Note The file parsing logic in GPM is quite \"dumb\" so it will not, for example, process any of the logic contained in the command file. Example gpm profile import path/to/file.sh -n new-profile List The list command simply lists all the currently saved Git profiles (from the user's ~/.gitprofile ). Example gpm profile list"
  },
  "index.html": {
    "href": "index.html",
    "title": "Git Profile Manager | Git Profile Manager",
    "keywords": "Git Profile Manager Introduction Git Profile Manager is a simple command line application to manage \"profiles\" for common Git configurations. For example, if you contribute to multiple repositories or teams and are often needing to change repository-specific (or global) addresses or options. Using this documentation: Click the tabs at the top of the page to navigate: User Documentation : General documentation Developer Reference : Full API documentation for developers"
  },
  "api/GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings.html",
    "title": "Class ProfileDeleteCommand.Settings | Git Profile Manager",
    "keywords": "Class ProfileDeleteCommand.Settings Inheritance System.Object ProfileDeleteCommand.Settings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public sealed class Settings Properties | Improve this Doc View Source NonInteractive Declaration [Option(\"--non-interactive\")] public bool NonInteractive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ProfileName Declaration [Argument(\"<NAME>\", Order = 0)] public string ProfileName { get; set; } Property Value Type Description System.String Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileDeleteCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileDeleteCommand.html",
    "title": "Class ProfileDeleteCommand | Git Profile Manager",
    "keywords": "Class ProfileDeleteCommand Inheritance System.Object Spectre.CommandLine.Command < ProfileDeleteCommand.Settings > ProfileDeleteCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileDeleteCommand : Command<ProfileDeleteCommand.Settings>, ICommand Constructors | Improve this Doc View Source ProfileDeleteCommand(IGitProfileStore) Declaration public ProfileDeleteCommand(IGitProfileStore store) Parameters Type Name Description IGitProfileStore store Properties | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ProfileDeleteCommand.Settings) Declaration public override int Run(ProfileDeleteCommand.Settings settings) Parameters Type Name Description ProfileDeleteCommand.Settings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings>.Run(GitProfileManager.Commands.Profile.ProfileDeleteCommand.Settings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileEditCommand.Settings.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileEditCommand.Settings.html",
    "title": "Class ProfileEditCommand.Settings | Git Profile Manager",
    "keywords": "Class ProfileEditCommand.Settings Inheritance System.Object ProfileEditCommand.Settings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public sealed class Settings Properties | Improve this Doc View Source ProfileName Declaration [Argument(\"<NAME>\", Order = 1)] public string ProfileName { get; set; } Property Value Type Description System.String | Improve this Doc View Source RawConfig Declaration [Argument(\"<CONFIG>\", Order = 2)] public string RawConfig { get; set; } Property Value Type Description System.String | Improve this Doc View Source Remove Declaration [Option(\"-r|--rm\")] public bool Remove { get; set; } Property Value Type Description System.Boolean Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileExportCommand.Settings.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileExportCommand.Settings.html",
    "title": "Class ProfileExportCommand.Settings | Git Profile Manager",
    "keywords": "Class ProfileExportCommand.Settings Inheritance System.Object ProfileSettings ProfileExportCommand.Settings Inherited Members ProfileSettings.ProfileName System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public sealed class Settings : ProfileSettings Properties | Improve this Doc View Source FilePath Declaration [Argument(\"<FILE>\", Order = 1)] public string FilePath { get; set; } Property Value Type Description System.String Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileExportCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileExportCommand.html",
    "title": "Class ProfileExportCommand | Git Profile Manager",
    "keywords": "Class ProfileExportCommand Inheritance System.Object Spectre.CommandLine.Command < ProfileExportCommand.Settings > ProfileExportCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileExportCommand : Command<ProfileExportCommand.Settings>, ICommand Constructors | Improve this Doc View Source ProfileExportCommand(IGitProfileStore, ICommandFileService) Declaration public ProfileExportCommand(IGitProfileStore store, ICommandFileService fileService) Parameters Type Name Description IGitProfileStore store ICommandFileService fileService Properties | Improve this Doc View Source FileService Declaration public ICommandFileService FileService { get; } Property Value Type Description ICommandFileService | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ProfileExportCommand.Settings) Declaration public override int Run(ProfileExportCommand.Settings settings) Parameters Type Name Description ProfileExportCommand.Settings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileExportCommand.Settings>.Run(GitProfileManager.Commands.Profile.ProfileExportCommand.Settings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileListCommand.Settings.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileListCommand.Settings.html",
    "title": "Class ProfileListCommand.Settings | Git Profile Manager",
    "keywords": "Class ProfileListCommand.Settings Inheritance System.Object ProfileListCommand.Settings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public sealed class Settings Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.Profile.ProfileListCommand.html": {
    "href": "api/GitProfileManager.Commands.Profile.ProfileListCommand.html",
    "title": "Class ProfileListCommand | Git Profile Manager",
    "keywords": "Class ProfileListCommand Inheritance System.Object Spectre.CommandLine.Command < ProfileListCommand.Settings > ProfileListCommand Inherited Members Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Success Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Error Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Configure(Spectre.CommandLine.ICommandRegistrar) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Spectre.CommandLine.ICommand.Run(System.Object) Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Spectre.CommandLine.ICommand.SettingsType Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager.Commands.Profile Assembly : git-profile-manager.dll Syntax public class ProfileListCommand : Command<ProfileListCommand.Settings>, ICommand Constructors | Improve this Doc View Source ProfileListCommand(IGitProfileStore) Declaration public ProfileListCommand(IGitProfileStore store) Parameters Type Name Description IGitProfileStore store Properties | Improve this Doc View Source Store Declaration public IGitProfileStore Store { get; } Property Value Type Description IGitProfileStore Methods | Improve this Doc View Source Run(ProfileListCommand.Settings) Declaration public override int Run(ProfileListCommand.Settings settings) Parameters Type Name Description ProfileListCommand.Settings settings Returns Type Description System.Int32 Overrides Spectre.CommandLine.Command<GitProfileManager.Commands.Profile.ProfileListCommand.Settings>.Run(GitProfileManager.Commands.Profile.ProfileListCommand.Settings) Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  },
  "api/GitProfileManager.Commands.html": {
    "href": "api/GitProfileManager.Commands.html",
    "title": "Namespace GitProfileManager.Commands | Git Profile Manager",
    "keywords": "Namespace GitProfileManager.Commands Classes ProfileSettings"
  },
  "api/GitProfileManager.DependencyInjectionApp.html": {
    "href": "api/GitProfileManager.DependencyInjectionApp.html",
    "title": "Class DependencyInjectionApp | Git Profile Manager",
    "keywords": "Class DependencyInjectionApp Inheritance System.Object Spectre.CommandLine.CommandAppBase < Spectre.CommandLine.CommandAppSettings > DependencyInjectionApp Inherited Members Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Dispose() Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.RegisterCommand(System.Type) Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Run(System.String[]) Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Settings Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Streams Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Resolver System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : GitProfileManager Assembly : git-profile-manager.dll Syntax public class DependencyInjectionApp : CommandAppBase<CommandAppSettings>, IDisposable Constructors | Improve this Doc View Source DependencyInjectionApp() Declaration public DependencyInjectionApp() | Improve this Doc View Source DependencyInjectionApp(IServiceCollection, Boolean) Declaration public DependencyInjectionApp(IServiceCollection services, bool disableAutoRegistration = false) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Boolean disableAutoRegistration Properties | Improve this Doc View Source Services Declaration public IServiceCollection Services { get; } Property Value Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Methods | Improve this Doc View Source Initialize() Declaration protected override void Initialize() Overrides Spectre.CommandLine.CommandAppBase<Spectre.CommandLine.CommandAppSettings>.Initialize() | Improve this Doc View Source RegisterCommand<TCommand>() Declaration public void RegisterCommand<TCommand>()where TCommand : class, ICommand Type Parameters Name Description TCommand Extension Methods Extensions.IsAssignableTo<TTarget>(Object)"
  }
}